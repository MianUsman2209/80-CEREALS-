# -*- coding: utf-8 -*-
"""Untitled23.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oPi-b1SKic2g0BMv5VIDxrBiPFscm9Tg
"""

#Import the main libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('/content/cereal[1].csv')

data.head()

data.info

missing_values_count = data.isnull().sum()
missing_values_count[:]

data.rename(columns={'mfr':'manufacturer'}, inplace = True)

unique_values_column1 = data['name'].value_counts()

pd.set_option('display.max_rows', None)
print(unique_values_column1)

new_names = {'protein': 'protein (g)', 'fat': 'fat (g)','sodium': 'sodium (mg)','fiber':'fiber (g)','carbo':'carbohydrates (g)','sugars':'sugars (g)','potass':'potassium (mg)','vitamins': 'vitamins %', 'weight':'weight (oz/serv)','cups': 'cups/serv'}
data = data.rename(columns=new_names)

data['manufacturer'] = data['manufacturer'].replace({'A':'American Home Food Products','G':'General Mills','K' : 'Kelloggs','N' : 'Nabisco','P' : 'Post','Q' : 'Quaker Oats', 'R' : 'Ralston Purina'})

data['type'] = data['type'].replace({'C':'Cold','H':'Hot'})

# Get the 10 most caloric cereals
more_caloric_cereals = data.sort_values(by= 'calories', ascending = False)
top10_caloric_cereals = more_caloric_cereals.head(10)

# Get the 10 less caloric cereals and store it in a variable
less_caloric_cereals = data.sort_values(by= 'calories', ascending = True)
the10_less_caloric_cereals = less_caloric_cereals.head(10)

plt.figure(figsize=(10,6))
plt.barh(top10_caloric_cereals['name'],top10_caloric_cereals['calories'], color = 'red', label = 'Top 10 caloric cereals')
plt.barh(the10_less_caloric_cereals['name'], the10_less_caloric_cereals['calories'], color = 'green', label = 'Bottom 10 caloric cereals')
plt.xlabel('Calories')
plt.ylabel('Cereal')
plt.title('Comparison between the 10 most and the 10 less caloric cereals')
plt.legend()

nutrients = data[['protein (g)','fat (g)', 'carbohydrates (g)', 'sugars (g)', 'fiber (g)']]
correlation = nutrients.corr()
print(correlation)

plt.figure(figsize=(10,6))
sns.heatmap(correlation, annot=True, cmap='coolwarm',fmt=".2f")
plt.title('Matrix Correlation Between Nutrients')
plt.show()









